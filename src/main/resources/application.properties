#spring.h2.console.enabled = true
#
#spring.datasource.url= jdbc:postgresql://localhost:5432/scenario_db
#spring.datasource.username=postgres
#spring.datasource.password=1polkilo1


#spring.datasource.url= jdbc:postgresql://ec2-54-243-38-139.compute-1.amazonaws.com:5432/db3pme67alk37p
#spring.datasource.username=iovwyalpeiugyt
#spring.datasource.password=9026e4278caccf6179c07d130f333a6dd907a2a5b3ecc1975e132746f80b298d
#spring.datasource.driverClassName=org.postgresql.Driver

#spring.jpa.hibernate.ddl-auto=create

#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect



security.user.name=admin
security.user.password=qwerty


# Connection url for the database "scenario_db"
spring.datasource.driverClassName = org.postgresql.Driver
#spring.datasource.url = jdbc:postgresql://localhost:5432/scenario_db
spring.datasource.url = jdbc:postgresql://ec2-54-204-0-88.compute-1.amazonaws.com:5432/d3ijaejo3csne2


spring.datasource.username = jwmlekgfdmkjmf
spring.datasource.password = 9330e230ca2576a45ba94db539c3fd46141a5e66956cc567f3d28fcd2dc352a4
#spring.datasource.password = 4e3b1fb0b8213ec21bef3b37a83bd11fbcfb5c3fe2994c1c215ad997ba0404e7

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


spring.jpa.show-sql = true


spring.jpa.hibernate.ddl-auto = create


spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
